ORIGINAL
def index(request):

context = {
		"leagues": League.objects.all(),
		"teams": Team.objects.all(),
		"players": Player.objects.all(),
	}
	return render(request, "leagues/index.html", context)


1  ...all baseball leagues

          context = {
            "leagues": League.objects.filter(sport = "Baseball")
          }

2  ...all womens' leagues

          context = {
            "leagues": League.objects.filter(name__contains = "Womens'")
          }

3  ...all leagues where sport is any type of hockey

          context = {
            "leagues": League.objects.filter(name__contains = "Hockey")
          }

4  ...all leagues where sport is something OTHER THAN football

          context = {
            "leagues": League.objects.exclude(sport = "Football")
          }

5  ...all leagues that call themselves "conferences"

          context = {
            "leagues": League.objects.filter(name__contains = "Conference")
          }

6  ...all leagues in the Atlantic region

          context = {
            "leagues": League.objects.filter(name__contains = "Atlantic")
          }

7  ...all teams based in Dallas

          context = {
            "teams": Team.objects.filter(location = "Dallas")
          }

8  ...all teams named the Raptors

          context = {
            "teams": Team.objects.filter(team_name = "Raptors")
          }

9  ...all teams whose location includes "City"

          context = {
            "teams": Team.objects.filter(location__contains = "City")
          }

10  ...all teams whose names begin with "T"

          context = {
            "teams": Team.objects.filter(team_name__startswith = "T")
          }

11  ...all teams, ordered alphabetically by location

          context = {
            "teams": Team.objects.orderby("-team_name")
          }

12  ...all teams, ordered by team name in reverse alphabetical order

          context = {
            "teams": Team.objects.filter(sport__contains = "Hockey")
          }

13  ...every player with last name "Cooper"

          context = {
            "players": Player.objects.filter(last_name = "Cooper")
          }

14  ...every player with first name "Joshua"

          context = {
            "players": Player.objects.filter(first_name = "Joshua")
          }

15  ...every player with last name "Cooper" EXCEPT FOR Joshua

          context = {
            "players": Player.objects.filter(last_name = "Cooper").exclude(first_name="Joshua")
          }

16  ...all players with first name "Alexander" OR first name "Wyatt"
      from django.db.models import Q
          context = {
            "players": Player.objects.filter(Q(first_name = "Cooper")| Q(first_name="Wyatt"))
          }
